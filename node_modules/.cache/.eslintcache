[{"/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/index.js":"1","/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/App.js":"2","/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/reportWebVitals.js":"3","/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/Blog.js":"4","/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/Footer.js":"5","/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/Sidebar.js":"6","/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/MainFeaturedPost.js":"7","/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/Main.js":"8","/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/Header.js":"9","/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/FeaturedPost.js":"10","/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/Markdown.js":"11","/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/Nav.js":"12","/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/LinkRouter.js":"13"},{"size":627,"mtime":1683894782054,"results":"14","hashOfConfig":"15"},{"size":372,"mtime":1683894805554,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1683467530178,"results":"17","hashOfConfig":"15"},{"size":6554,"mtime":1684837388896,"results":"18","hashOfConfig":"15"},{"size":1200,"mtime":1683035489000,"results":"19","hashOfConfig":"15"},{"size":1811,"mtime":1683035489000,"results":"20","hashOfConfig":"15"},{"size":2090,"mtime":1684297209161,"results":"21","hashOfConfig":"15"},{"size":1391,"mtime":1684763373178,"results":"22","hashOfConfig":"15"},{"size":1675,"mtime":1683035489000,"results":"23","hashOfConfig":"15"},{"size":1642,"mtime":1683035489000,"results":"24","hashOfConfig":"15"},{"size":1239,"mtime":1684819142568,"results":"25","hashOfConfig":"15"},{"size":7447,"mtime":1684819714368,"results":"26","hashOfConfig":"15"},{"size":1047,"mtime":1684215495188,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1ktlqw9",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/index.js",[],[],[],"/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/App.js",["71"],[],"import React, { Component } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Blog from './components/Blog/Blog'\nimport Nav from './components/Blog/Nav'\n\n\nexport default function App() {\n  return (\n    <div>\n      <Routes>\n        <Route path=\"/\" element={<Blog />} />\n        <Route path=\"/nav\" element={<Nav />} />\n      </Routes>\n    </div>\n  );\n}\n","/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/reportWebVitals.js",[],[],"/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/Blog.js",["72","73","74"],[],"import * as React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport FacebookIcon from '@mui/icons-material/Facebook';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Header from './Header';\nimport MainFeaturedPost from './MainFeaturedPost';\nimport FeaturedPost from './FeaturedPost';\nimport Main from './Main';\nimport Sidebar from './Sidebar';\nimport Footer from './Footer';\nimport post1 from './blog-post.1.md';\nimport post2 from './blog-post.2.md';\nimport post3 from './blog-post.3.md';\nimport axios from 'axios';\n\nconst sections = [\n  { title: 'Technology', url: '#' },\n  { title: 'Design', url: '#' },\n  { title: 'Culture', url: '#' },\n  { title: 'Business', url: '#' },\n  { title: 'Politics', url: '#' },\n  { title: 'Opinion', url: '#' },\n  { title: 'Science', url: '#' },\n  { title: 'Health', url: '#' },\n  { title: 'Style', url: '#' },\n  { title: 'Travel', url: '#' },\n];\n\nconst mainFeaturedPost = {\n  title: 'Title of a longer featured blog post',\n  description:\n    \"Multiple lines of text that form the lede, informing new readers quickly and efficiently about what's most interesting in this post's contents.\",\n  image: 'https://source.unsplash.com/random/?blog/',\n  imageText: 'main image description',\n  linkText: 'Continue reading…',\n};\n\nconst featuredPosts = [\n  {\n    title: 'Featured post',\n    date: 'Nov 12',\n    description:\n      'This is a wider card with supporting text below as a natural lead-in to additional content.',\n    image: process.env.REACT_APP_API_ENDPOINT+'static/posts/'+'post/img1.png',\n    imageLabel: 'Image Text',\n  },\n  {\n    title: 'Post title',\n    date: 'Nov 11',\n    description:\n      'This is a wider card with supporting text below as a natural lead-in to additional content.',\n    image: 'https://source.unsplash.com/random/?blog/',\n    imageLabel: 'Image Text',\n  },\n];\n\nconst posts = [post1, post2, post3];\n\nconst sidebar = {\n  title: 'About',\n  description:\n    'Etiam porta sem malesuada magna mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.',\n  archives: [\n    { title: 'March 2020', url: '#' },\n    { title: 'February 2020', url: '#' },\n    { title: 'January 2020', url: '#' },\n    { title: 'November 1999', url: '#' },\n    { title: 'October 1999', url: '#' },\n    { title: 'September 1999', url: '#' },\n    { title: 'August 1999', url: '#' },\n    { title: 'July 1999', url: '#' },\n    { title: 'June 1999', url: '#' },\n    { title: 'May 1999', url: '#' },\n    { title: 'April 1999', url: '#' },\n  ],\n  social: [\n    { name: 'GitHub', icon: GitHubIcon },\n    { name: 'Twitter', icon: TwitterIcon },\n    { name: 'Facebook', icon: FacebookIcon },\n  ],\n};\n\nconst theme = createTheme();\n\nexport default function Blog() {\n  const [data, setData] = React.useState(null);\n  const [post, setposts] = React.useState([]);\n  const [mainpost, setmainpost] = React.useState([]);\n  const [featurepost, setfeaturepost] = React.useState([]);\n  const [loading, setLoading] = React.useState(true); //conditional rendering\n\n  React.useEffect(() => {\n    axios.get(process.env.REACT_APP_API_ENDPOINT+'/get-posts')\n      .then(response => {\n        setData(response.data);\n        setLoading(false);\n        const PostList=response.data.post;\n        const Post = PostList.map(post => {\n          let updatedDescription = post.description.toString();\n          if (Array.isArray(post.image)) {\n              post.image.forEach((image) => {\n                updatedDescription = updatedDescription.replace(image, process.env.REACT_APP_API_ENDPOINT + image);\n              });\n          }\n          else{\n              updatedDescription = updatedDescription.replace(response.data.post.image, process.env.REACT_APP_API_ENDPOINT+response.data.post.image);\n          }\n          return {\n            description: updatedDescription,\n            id:post.id,\n            title: post.title, \n            image: process.env.REACT_APP_API_ENDPOINT+post.image ,\n            imageText: 'main image description',\n            linkText: 'Continue reading…',\n          };\n        });\n        setposts(Post)\n        const MainpostList = response.data.main;\n        const Mainpost = MainpostList.map(post => {\n          return {\n            description: post.description,\n            id:post.id,\n            title: post.title, \n            image: process.env.REACT_APP_API_ENDPOINT+post.image ,\n            imageText: 'main image description',\n            linkText: 'Continue reading…',\n          };\n        });\n        setmainpost(Mainpost[0]);\n        const FeaturepostList = response.data.feature;\n        const Featurepost = FeaturepostList.splice(0,2).map(post => {\n        return {\n            date:post.date,\n            id:post.id,\n            description: post.description,\n            title: post.title, \n            image: process.env.REACT_APP_API_ENDPOINT+post.image ,\n            imagelabel: 'main image description',\n          };\n        });\n        setfeaturepost(Featurepost)\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, []);\n  \n  console.log(\"---->data\",data);;\n  console.log(\"---->posts\",post);\n  console.log(\"---->org posts\",posts);\n  console.log(\"---->mainpost\",mainpost);\n  console.log(\"---->featuredpost\",featurepost)\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Header title=\"Engineering Insights: Your Digest to Biomedical and Analytical Instruments Operation and Maintenance\" sections={sections} />\n        <main>\n          <MainFeaturedPost post={mainpost} />\n          <Grid container spacing={4}>\n            {featurepost.map((post) => (\n              <FeaturedPost key={post.title} post={post} />\n            ))}\n          </Grid>\n          <Grid container spacing={5} sx={{ mt: 3 }}>\n            <Main title=\"From the firehose\" posts={post} />\n            <Sidebar\n              title={sidebar.title}\n              description={sidebar.description}\n              archives={sidebar.archives}\n              social={sidebar.social}\n            />\n          </Grid>\n        </main>\n      </Container>\n      <Footer\n        title=\"Footer\"\n        description=\"Something here to give the footer a purpose!\"\n      />\n    </ThemeProvider>\n  );\n}\n","/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/Footer.js",[],[],"/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/Sidebar.js",[],[],"/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/MainFeaturedPost.js",[],[],"/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/Main.js",[],[],"/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/Header.js",[],[],"/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/FeaturedPost.js",[],[],"/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/Markdown.js",[],[],"/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/Nav.js",["75","76"],[],"import * as React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport FacebookIcon from '@mui/icons-material/Facebook';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Header from './Header';\nimport MainFeaturedPost from './MainFeaturedPost';\nimport FeaturedPost from './FeaturedPost';\nimport Main from './Main';\nimport Sidebar from './Sidebar';\nimport Footer from './Footer';\nimport post1 from './blog-post.1.md';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nconst sections = [\n    { title: 'Technology', url: '#' },\n    { title: 'Design', url: '#' },\n    { title: 'Culture', url: '#' },\n    { title: 'Business', url: '#' },\n    { title: 'Politics', url: '#' },\n    { title: 'Opinion', url: '#' },\n    { title: 'Science', url: '#' },\n    { title: 'Health', url: '#' },\n    { title: 'Style', url: '#' },\n    { title: 'Travel', url: '#' },\n  ];\n\nconst featuredPosts = [\n    {\n      title: 'Featured post',\n      date: 'Nov 12',\n      description:\n        'This is a wider card with supporting text below as a natural lead-in to additional content.',\n      image: 'https://source.unsplash.com/random/?blog/',\n      imageLabel: 'Image Text',\n    },\n    {\n      title: 'Post title',\n      date: 'Nov 11',\n      description:\n        'This is a wider card with supporting text below as a natural lead-in to additional content.',\n      image: 'https://source.unsplash.com/random/?blog/',\n      imageLabel: 'Image Text',\n    },\n    {\n      title: 'Post title',\n      date: 'Nov 11',\n      description:\n        'This is a wider card with supporting text below as a natural lead-in to additional content.',\n      image: 'https://source.unsplash.com/random/?blog/',\n      imageLabel: 'Image Text',\n    },\n    {\n      title: 'Post title',\n      date: 'Nov 11',\n      description:\n        'This is a wider card with supporting text below as a natural lead-in to additional content.',\n      image: 'https://source.unsplash.com/random/?blog/',\n      imageLabel: 'Image Text',\n    }\n  ];\n  \n  const posts = [post1];\n  \n  const sidebar = {\n    title: 'About',\n    description:\n      'Etiam porta sem malesuada magna mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.',\n    archives: [\n      { title: 'March 2020', url: '#' },\n      { title: 'February 2020', url: '#' },\n      { title: 'January 2020', url: '#' },\n      { title: 'November 1999', url: '#' },\n      { title: 'October 1999', url: '#' },\n      { title: 'September 1999', url: '#' },\n      { title: 'August 1999', url: '#' },\n      { title: 'July 1999', url: '#' },\n      { title: 'June 1999', url: '#' },\n      { title: 'May 1999', url: '#' },\n      { title: 'April 1999', url: '#' },\n    ],\n    social: [\n      { name: 'GitHub', icon: GitHubIcon },\n      { name: 'Twitter', icon: TwitterIcon },\n      { name: 'Facebook', icon: FacebookIcon },\n    ],\n  };\n\nconst theme = createTheme();\n\nexport default function Nav(){\n    const location = useLocation();\n    const customProp = location.state;\n    console.log(\"-->customProp->id= \",customProp.id);\n\n    const [post, setposts] = React.useState([]);\n    //const [mainpost, setmainpost] = React.useState([]);\n    //const [featurepost, setfeaturepost] = React.useState([]);\n    const [loading, setLoading] = React.useState(true); //conditional rendering\n    React.useEffect(() => {\n      if(customProp.id !== undefined){\n        axios.get(process.env.REACT_APP_API_ENDPOINT+'/get-posts?id='+customProp.id)\n          .then(response => {\n            //setData(response.data);\n            setLoading(false);\n            // Replace the image paths with the desired URL pattern in post.description\n            let updatedDescription = response.data.post.description.toString();\n\n            if (Array.isArray(response.data.post.image)) {\n              response.data.post.image.forEach((image) => {\n                updatedDescription = updatedDescription.replace(image, process.env.REACT_APP_API_ENDPOINT + image);\n              });\n            }\n            else{\n              updatedDescription = updatedDescription.replace(response.data.post.image, process.env.REACT_APP_API_ENDPOINT+response.data.post.image);\n            }\n            const PostList=response.data.post;\n            setposts({\n                description: updatedDescription,\n                id:PostList.id,\n                title: PostList.title, \n                image: process.env.REACT_APP_API_ENDPOINT+PostList.image ,\n                imageText: 'main image description',\n                linkText: 'Continue reading…',\n              })\n            /*const MainpostList = response.data.main;\n            const Mainpost = MainpostList.map(post => {\n              return {\n                description: post.description,\n                title: post.title, \n                image: process.env.REACT_APP_API_ENDPOINT+post.image ,\n                imageText: 'main image description',\n                linkText: 'Continue reading…',\n              };\n            });\n            setmainpost(Mainpost[0]);\n            const FeaturepostList = response.data.feature;\n            const Featurepost = FeaturepostList.splice(0,2).map(post => {\n            return {\n                date:post.date,\n                description: post.description,\n                title: post.title, \n                image: process.env.REACT_APP_API_ENDPOINT+post.image ,\n                imagelabel: 'main image description',\n              };\n            });\n            setfeaturepost(Featurepost)*/\n          })\n          .catch(error => {\n            console.error(error);\n          });\n        }\n    }, [customProp.id]);/*By including [customProp.id] as a dependency \n                        in the useEffect dependency array, \n                        the effect will only re-run if the id prop changes. \n                        If id is undefined initially and then becomes defined later, \n                        the effect will trigger again*/\n\n    //console.log(\"--->Post= \",post.description);\n    if(loading){\n      return(\n        <div>\n          Loading....\n        </div>\n      );\n    }\n    else{\n      return (\n          <ThemeProvider theme={theme}>\n              <CssBaseline />\n              <Container maxWidth=\"lg\">\n              <Header title=\"Engineering Insights: Your Digest to Biomedical and Analytical Instruments Operation and Maintenance\" sections={sections} />\n              <main>\n              <Main title=\"From the firehose\" posts={post} />\n              <Grid container spacing={4}>\n              {featuredPosts.map((post) => (\n                <FeaturedPost key={post.title} post={post} />\n              ))}\n              </Grid>\n              <Grid container spacing={5} sx={{ mt: 3 }}></Grid>\n              <Sidebar\n                title={sidebar.title}\n                description={sidebar.description}\n                archives={sidebar.archives}\n                social={sidebar.social}\n                  />\n              </main> \n              </Container>\n              <Footer\n                  title=\"Footer\"\n                  description=\"Something here to give the footer a purpose!\"\n              />\n          </ThemeProvider>\n      )\n    }\n}","/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/LinkRouter.js",[],[],{"ruleId":"77","severity":1,"message":"78","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"77","severity":1,"message":"81","line":33,"column":7,"nodeType":"79","messageId":"80","endLine":33,"endColumn":23},{"ruleId":"77","severity":1,"message":"82","line":42,"column":7,"nodeType":"79","messageId":"80","endLine":42,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":48,"column":62,"nodeType":"85","messageId":"86","endLine":48,"endColumn":63},{"ruleId":"77","severity":1,"message":"87","line":10,"column":8,"nodeType":"79","messageId":"80","endLine":10,"endColumn":24},{"ruleId":"77","severity":1,"message":"88","line":67,"column":9,"nodeType":"79","messageId":"80","endLine":67,"endColumn":14},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'mainFeaturedPost' is assigned a value but never used.","'featuredPosts' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'MainFeaturedPost' is defined but never used.","'posts' is assigned a value but never used."]