{"ast":null,"code":"var _jsxFileName = \"/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/Markdown.js\";\nimport * as React from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MarkdownListItem(props) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"li\",\n    sx: {\n      mt: 1,\n      typography: 'body1'\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}\n_c = MarkdownListItem;\nfunction MarkdownImgTag(props) {\n  console.log(\"MarkdownJS-->\", props);\n  const {\n    img\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"img\",\n    image: img\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c2 = MarkdownImgTag;\nconst options = {\n  overrides: {\n    h1: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'h4',\n        component: 'h1'\n      }\n    },\n    h2: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'h6',\n        component: 'h2'\n      }\n    },\n    h3: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'subtitle1'\n      }\n    },\n    h4: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'caption',\n        paragraph: true\n      }\n    },\n    p: {\n      component: Typography,\n      props: {\n        paragraph: true\n      }\n    },\n    a: {\n      component: Link\n    },\n    li: {\n      component: MarkdownListItem\n    },\n    img: {\n      component: MarkdownImgTag\n    }\n  }\n};\nexport default function Markdown(props) {\n  return /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n    options: options,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n}\n_c3 = Markdown;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MarkdownListItem\");\n$RefreshReg$(_c2, \"MarkdownImgTag\");\n$RefreshReg$(_c3, \"Markdown\");","map":{"version":3,"names":["React","ReactMarkdown","Typography","Link","Box","jsxDEV","_jsxDEV","MarkdownListItem","props","component","sx","mt","typography","fileName","_jsxFileName","lineNumber","columnNumber","_c","MarkdownImgTag","console","log","img","image","_c2","options","overrides","h1","gutterBottom","variant","h2","h3","h4","paragraph","p","a","li","Markdown","_c3","$RefreshReg$"],"sources":["/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/Markdown.js"],"sourcesContent":["import * as React from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport Box from '@mui/material/Box';\n\nfunction MarkdownListItem(props) {\n  return <Box component=\"li\" sx={{ mt: 1, typography: 'body1' }} {...props} />;\n}\n\nfunction MarkdownImgTag(props) {\n  console.log(\"MarkdownJS-->\",props)\n  const { img } = props;\n  return (\n    <Box component='img'\n      image={img}  \n    />\n  );\n}\nconst options = {\n  overrides: {\n    h1: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'h4',\n        component: 'h1',\n      },\n    },\n    h2: {\n      component: Typography,\n      props: { gutterBottom: true, variant: 'h6', component: 'h2' },\n    },\n    h3: {\n      component: Typography,\n      props: { gutterBottom: true, variant: 'subtitle1' },\n    },\n    h4: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'caption',\n        paragraph: true,\n      },\n    },\n    p: {\n      component: Typography,\n      props: { paragraph: true },\n    },\n    a: { component: Link },\n    li: {\n      component: MarkdownListItem,\n    },\n    img:{\n      component:MarkdownImgTag,\n    },\n  },\n};\n\nexport default function Markdown(props) {\n  return <ReactMarkdown options={options} {...props} />;\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,GAAG,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAC/B,oBAAOF,OAAA,CAACF,GAAG;IAACK,SAAS,EAAC,IAAI;IAACC,EAAE,EAAE;MAAEC,EAAE,EAAE,CAAC;MAAEC,UAAU,EAAE;IAAQ,CAAE;IAAA,GAAKJ;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAC9E;AAACC,EAAA,GAFQV,gBAAgB;AAIzB,SAASW,cAAcA,CAACV,KAAK,EAAE;EAC7BW,OAAO,CAACC,GAAG,CAAC,eAAe,EAACZ,KAAK,CAAC;EAClC,MAAM;IAAEa;EAAI,CAAC,GAAGb,KAAK;EACrB,oBACEF,OAAA,CAACF,GAAG;IAACK,SAAS,EAAC,KAAK;IAClBa,KAAK,EAAED;EAAI;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEN;AAACO,GAAA,GARQL,cAAc;AASvB,MAAMM,OAAO,GAAG;EACdC,SAAS,EAAE;IACTC,EAAE,EAAE;MACFjB,SAAS,EAAEP,UAAU;MACrBM,KAAK,EAAE;QACLmB,YAAY,EAAE,IAAI;QAClBC,OAAO,EAAE,IAAI;QACbnB,SAAS,EAAE;MACb;IACF,CAAC;IACDoB,EAAE,EAAE;MACFpB,SAAS,EAAEP,UAAU;MACrBM,KAAK,EAAE;QAAEmB,YAAY,EAAE,IAAI;QAAEC,OAAO,EAAE,IAAI;QAAEnB,SAAS,EAAE;MAAK;IAC9D,CAAC;IACDqB,EAAE,EAAE;MACFrB,SAAS,EAAEP,UAAU;MACrBM,KAAK,EAAE;QAAEmB,YAAY,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAY;IACpD,CAAC;IACDG,EAAE,EAAE;MACFtB,SAAS,EAAEP,UAAU;MACrBM,KAAK,EAAE;QACLmB,YAAY,EAAE,IAAI;QAClBC,OAAO,EAAE,SAAS;QAClBI,SAAS,EAAE;MACb;IACF,CAAC;IACDC,CAAC,EAAE;MACDxB,SAAS,EAAEP,UAAU;MACrBM,KAAK,EAAE;QAAEwB,SAAS,EAAE;MAAK;IAC3B,CAAC;IACDE,CAAC,EAAE;MAAEzB,SAAS,EAAEN;IAAK,CAAC;IACtBgC,EAAE,EAAE;MACF1B,SAAS,EAAEF;IACb,CAAC;IACDc,GAAG,EAAC;MACFZ,SAAS,EAACS;IACZ;EACF;AACF,CAAC;AAED,eAAe,SAASkB,QAAQA,CAAC5B,KAAK,EAAE;EACtC,oBAAOF,OAAA,CAACL,aAAa;IAACuB,OAAO,EAAEA,OAAQ;IAAA,GAAKhB;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AACvD;AAACqB,GAAA,GAFuBD,QAAQ;AAAA,IAAAnB,EAAA,EAAAM,GAAA,EAAAc,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAf,GAAA;AAAAe,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}