{"ast":null,"code":"var _jsxFileName = \"/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/newMarkdown.js\";\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Box, Typography, Link } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MarkdownListItem(props) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"li\",\n    sx: {\n      mt: 1,\n      typography: 'body1'\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n_c = MarkdownListItem;\nfunction MarkdownImage(props) {\n  const {\n    image,\n    imageText\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: image,\n    alt: imageText,\n    style: {\n      maxWidth: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n_c2 = MarkdownImage;\nexport default function Markdown(props) {\n  const renderers = {\n    h1: _ref => {\n      let {\n        children\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h4\",\n        component: \"h1\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 27\n      }, this);\n    },\n    h2: _ref2 => {\n      let {\n        children\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h6\",\n        component: \"h2\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 27\n      }, this);\n    },\n    h3: _ref3 => {\n      let {\n        children\n      } = _ref3;\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"subtitle1\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 27\n      }, this);\n    },\n    h4: _ref4 => {\n      let {\n        children\n      } = _ref4;\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"caption\",\n        paragraph: true,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 27\n      }, this);\n    },\n    p: _ref5 => {\n      let {\n        children\n      } = _ref5;\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        paragraph: true,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 26\n      }, this);\n    },\n    a: _ref6 => {\n      let {\n        href,\n        children\n      } = _ref6;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: href,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 32\n      }, this);\n    },\n    li: MarkdownListItem,\n    img: MarkdownImage\n  };\n  return /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n    renderers: renderers,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n}\n_c3 = Markdown;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MarkdownListItem\");\n$RefreshReg$(_c2, \"MarkdownImage\");\n$RefreshReg$(_c3, \"Markdown\");","map":{"version":3,"names":["React","ReactMarkdown","Box","Typography","Link","jsxDEV","_jsxDEV","MarkdownListItem","props","component","sx","mt","typography","fileName","_jsxFileName","lineNumber","columnNumber","_c","MarkdownImage","image","imageText","src","alt","style","maxWidth","_c2","Markdown","renderers","h1","_ref","children","gutterBottom","variant","h2","_ref2","h3","_ref3","h4","_ref4","paragraph","p","_ref5","a","_ref6","href","target","rel","li","img","_c3","$RefreshReg$"],"sources":["/home/dev/Dev/python_Projects/3/biomedalyze/renderappV2/frontend_render_appV1/src/components/Blog/newMarkdown.js"],"sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Box, Typography, Link } from '@mui/material';\n\nfunction MarkdownListItem(props) {\n  return <Box component=\"li\" sx={{ mt: 1, typography: 'body1' }} {...props} />;\n}\n\nfunction MarkdownImage(props) {\n    const {image,imageText} = props;    \n  return <img src={image} alt={imageText} style={{ maxWidth: '100%' }} />;\n}\n\nexport default function Markdown(props) {\n  const renderers = {\n    h1: ({ children }) => <Typography gutterBottom variant=\"h4\" component=\"h1\">{children}</Typography>,\n    h2: ({ children }) => <Typography gutterBottom variant=\"h6\" component=\"h2\">{children}</Typography>,\n    h3: ({ children }) => <Typography gutterBottom variant=\"subtitle1\">{children}</Typography>,\n    h4: ({ children }) => <Typography gutterBottom variant=\"caption\" paragraph>{children}</Typography>,\n    p: ({ children }) => <Typography paragraph>{children}</Typography>,\n    a: ({ href, children }) => <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">{children}</Link>,\n    li: MarkdownListItem,\n    img: MarkdownImage,\n  };\n\n  return <ReactMarkdown renderers={renderers} {...props} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}